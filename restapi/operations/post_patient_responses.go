package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/solcates/med-tracker/models"
)

// PostPatientOKCode is the HTTP code returned for type PostPatientOK
const PostPatientOKCode int = 200

/*PostPatientOK create cert

swagger:response postPatientOK
*/
type PostPatientOK struct {

	/*
	  In: Body
	*/
	Payload *models.Patient `json:"body,omitempty"`
}

// NewPostPatientOK creates PostPatientOK with default headers values
func NewPostPatientOK() *PostPatientOK {
	return &PostPatientOK{}
}

// WithPayload adds the payload to the post patient o k response
func (o *PostPatientOK) WithPayload(payload *models.Patient) *PostPatientOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post patient o k response
func (o *PostPatientOK) SetPayload(payload *models.Patient) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPatientOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostPatientDefault generic error

swagger:response postPatientDefault
*/
type PostPatientDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostPatientDefault creates PostPatientDefault with default headers values
func NewPostPatientDefault(code int) *PostPatientDefault {
	if code <= 0 {
		code = 500
	}

	return &PostPatientDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post patient default response
func (o *PostPatientDefault) WithStatusCode(code int) *PostPatientDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post patient default response
func (o *PostPatientDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post patient default response
func (o *PostPatientDefault) WithPayload(payload *models.Error) *PostPatientDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post patient default response
func (o *PostPatientDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPatientDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
